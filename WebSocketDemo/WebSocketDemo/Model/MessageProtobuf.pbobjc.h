// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageProtobuf.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MessageProtobufRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface MessageProtobufRoot : GPBRootObject
@end

#pragma mark - WSBaseMessage

typedef GPB_ENUM(WSBaseMessage_FieldNumber) {
  WSBaseMessage_FieldNumber_MsgType = 2,
  WSBaseMessage_FieldNumber_BytesData = 3,
};

@interface WSBaseMessage : GPBMessage

@property(nonatomic, readwrite) int32_t msgType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *bytesData;

@end

#pragma mark - WSLoginReq

typedef GPB_ENUM(WSLoginReq_FieldNumber) {
  WSLoginReq_FieldNumber_DeviceId = 1,
};

/**
 * type = 1
 **/
@interface WSLoginReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@end

#pragma mark - WSLoginRes

typedef GPB_ENUM(WSLoginRes_FieldNumber) {
  WSLoginRes_FieldNumber_Code = 1,
  WSLoginRes_FieldNumber_Desc = 2,
};

/**
 * type=2
 **/
@interface WSLoginRes : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@end

#pragma mark - WSHeartbeatReq

typedef GPB_ENUM(WSHeartbeatReq_FieldNumber) {
  WSHeartbeatReq_FieldNumber_DeviceId = 1,
};

/**
 * type=3
 **/
@interface WSHeartbeatReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@end

#pragma mark - WSHeartbeatRes

typedef GPB_ENUM(WSHeartbeatRes_FieldNumber) {
  WSHeartbeatRes_FieldNumber_Code = 1,
  WSHeartbeatRes_FieldNumber_Desc = 2,
};

/**
 * type=4
 **/
@interface WSHeartbeatRes : GPBMessage

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@end

#pragma mark - WSTextMessageReq

typedef GPB_ENUM(WSTextMessageReq_FieldNumber) {
  WSTextMessageReq_FieldNumber_MessageId = 1,
  WSTextMessageReq_FieldNumber_DeviceId = 2,
  WSTextMessageReq_FieldNumber_Content = 3,
};

/**
 * type=5
 **/
@interface WSTextMessageReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - WSTextMessageRes

typedef GPB_ENUM(WSTextMessageRes_FieldNumber) {
  WSTextMessageRes_FieldNumber_MessageId = 1,
  WSTextMessageRes_FieldNumber_Code = 2,
  WSTextMessageRes_FieldNumber_Desc = 3,
  WSTextMessageRes_FieldNumber_Content = 4,
};

/**
 * type=6
 **/
@interface WSTextMessageRes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *messageId;

@property(nonatomic, readwrite) int32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
